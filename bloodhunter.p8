pico-8 cartridge // http://www.pico-8.com
version 42
__lua__

hunter_x = 64 -- bat sprites, var was named this based on old game idea
hunter_y = 64 -- bat sprites, var was named this based on old game idea
hunter_sprites = {24, 25, 26} -- bat sprites, var was named this based on old game idea
hunter_index = 1 -- bat sprites, var was named this based on old game idea
enemy_count = 5 -- enemy corresponds to the sun
enemies = {}
treasure_count = 5 -- treasure corresponds to blood
treasures = {}
timer = 60
game_state = "title" 
special_treasure_count = 5
special_treasures = {}
score = 0
last_move_time = 0
idle_time_threshold = 1
sun_offset_y = 0
sun_anim_dir = 1
sun2_offset_y = 0
sun2_anim_dir = 1
enemy_count_2 = 3 -- enemy 2 corresponds to holy water
enemies_2 = {}    
title_anim_y = 50
title_anim_dir = 1
high_scores = {0, 0, 0, 0, 0}
gold_color = 10
gold_stars = {
    {x = 20, y = 30},
    {x = 50, y = 80},
    {x = 90, y = 50},
    {x = 110, y = 20},
    {x = 40, y = 110},
    {x = 70, y = 100}
}
sprite_9_active = false
blanket_active = false --this is the net
blanket_x = 0           
blanket_y = 0           
blanket_speed = 5 


function add_score(new_score)

    add(high_scores, new_score)
    sort_scores(high_scores)

    while #high_scores > 5 do
        deli(high_scores)
    end
end

function check_high_scores()
    add_score(score)
end

function draw_high_scores()

    cls(0)

    local title_text = "high scores"
    print(title_text, 64 - #title_text * 2, 20, 8) 

    for i = 1, #high_scores do
        local score_text = "score " .. i .. ": " .. high_scores[i]
        print(score_text, 64 - #score_text * 2, 30 + i * 10, 7) 
    end

    local return_text = "press x to return"
    print(return_text, 64 - #return_text * 2, 90, 11) 

    local blink = flr(time() * 2) % 2
    local blink_text = "you have seen the blood..."

    if blink == 1 then
        print(blink_text, 64 - #blink_text * 2, 110, 8) 
    end

end

function sort_scores(scores)

    for i = 2, #scores do
        local key = scores[i]
        local j = i - 1
        while j >= 1 and scores[j] < key do
            scores[j + 1] = scores[j]
            j = j - 1
        end
        scores[j + 1] = key
    end
end

function _init()
    
    for i = 1, enemy_count do
        enemies[i] = {
            x = rnd(128),
            y = rnd(128),
            speed_x = rnd(4) - 1,
            speed_y = rnd(4) - 1
        }
    end

    for i = 1, enemy_count_2 do
        enemies_2[i] = {
            x = rnd(128),
            y = rnd(128),
            speed_x = rnd(4) - 1,
            speed_y = rnd(4) - 1
        }
    end

    for i = 1, treasure_count do
        treasures[i] = { x = rnd(128), y = rnd(128) }
    end

    for i = 1, special_treasure_count do
        special_treasures[i] = { x = rnd(128), y = rnd(128) }
    end
end

function _update()

    if game_state == "title" then
        title_anim_y += title_anim_dir
        if title_anim_y > 52 or title_anim_y < 48 then
            title_anim_dir = -title_anim_dir
        end

        if btnp(5) then
            game_state = "playing"
        end

    elseif game_state == "playing" then
        
        local moved = false

        if btnp(5) and not blanket_active then
            blanket_active = true
            blanket_x = hunter_x
            blanket_y = hunter_y
        end

        if btnp(4) and not sprite_9_active then
            sprite_9_active = true
            sprite_9_x = hunter_x
            sprite_9_y = hunter_y
        end
        
        if blanket_active then
            blanket_y -= blanket_speed
        
            if blanket_y < 0 then
                blanket_active = false
            end
        
            for i = 1, enemy_count do
                if enemies[i] then
                    if abs(blanket_x - enemies[i].x) < 8 and abs(blanket_y - enemies[i].y) < 8 then
                        enemies[i].x = 0
                        enemies[i].y = 0
                        blanket_active = false
                        sfx(18)
                    end
                end
            end
        end

        if sprite_9_active then
            sprite_9_y -= blanket_speed

            if sprite_9_y < 0 then
                sprite_9_active = false
            end

            for i = 1, enemy_count_2 do
                if enemies_2[i] then
                    if abs(sprite_9_x - enemies_2[i].x) < 8 and abs(sprite_9_y - enemies_2[i].y) < 8 then
                        enemies_2[i].x = 0
                        enemies_2[i].y = 0
                        sprite_9_active = false
                        sfx(19)
                    end
                end
            end
        end
        

        for i = 1, special_treasure_count do
            if abs(hunter_x - special_treasures[i].x) < 8 and abs(hunter_y - special_treasures[i].y) < 8 then
                score += 5
                special_treasures[i].x = rnd(128)
                special_treasures[i].y = rnd(128)
                sfx(15)
            end
        end

        if btn(2) and hunter_y > 0 then
            hunter_y -= 2
            moved = true
        end
        if btn(3) and hunter_y < 120 then
            hunter_y += 2
            moved = true
        end
        if btn(0) and hunter_x > 0 then
            hunter_x -= 2
            moved = true
        end
        if btn(1) and hunter_x < 120 then
            hunter_x += 2
            moved = true
        end

        if not moved then
        else
            if hunter_index == 3 then
                hunter_index = 1
            else
                hunter_index = (hunter_index % 2) + 1
            end
        end

        for i = 1, enemy_count do
            if abs(hunter_x - enemies[i].x) < 8 and abs(hunter_y - enemies[i].y) < 8 then
                if not shield_active then
                    game_state = "game_over"
                    sfx(46)
                end
            end
        end

        for i = 1, enemy_count_2 do
            if abs(hunter_x - enemies_2[i].x) < 8 and abs(hunter_y - enemies_2[i].y) < 8 then
                if not shield_active then
                    game_state = "game_over"
                    sfx(46)
                end
            end
        end
        
        for i = 1, enemy_count do
            enemies[i].x += enemies[i].speed_x
            enemies[i].y += enemies[i].speed_y

            if enemies[i].x < 0 or enemies[i].x > 128 then
                enemies[i].speed_x = rnd(2) - 1
            end
            if enemies[i].y < 0 or enemies[i].y > 128 then
                enemies[i].speed_y = rnd(2) - 1
            end
        end

        for i = 1, enemy_count_2 do
            enemies_2[i].x += enemies_2[i].speed_x
            enemies_2[i].y += enemies_2[i].speed_y

            if enemies_2[i].x < 0 or enemies_2[i].x > 128 then
                enemies_2[i].speed_x = rnd(2) - 1
            end
            if enemies_2[i].y < 0 or enemies_2[i].y > 128 then
                enemies_2[i].speed_y = rnd(2) - 1
            end
        end


        for i = 1, treasure_count do
            if abs(hunter_x - treasures[i].x) < 8 and abs(hunter_y - treasures[i].y) < 8 then
                score += 1
                treasures[i].x = rnd(128)
                treasures[i].y = rnd(128)
                sfx(14)
            end
        end

        timer -= 1 / 60
        if timer <= 0 then
            check_high_scores()
            game_state = "game_over"
        end

    elseif game_state == "game_over" then
        if btn(5) then
            reset_game()

        elseif btn(4) then
            game_state = "high_scores"
            check_high_scores()
        end

    elseif game_state == "high_scores" then
        if btn(5) then
            game_state = "title"
        end
    end
end

function reset_game()
    hunter_x = 64
    hunter_y = 64
    timer = 60
    score = 0
    check_high_scores()
    game_state = "playing"
    _init()
end

function draw_gold_stars()
    for i = 1, #gold_stars do
        local star = gold_stars[i]
        pset(star.x, star.y, gold_color)  
    end
end

function _draw()
    cls(0)

    -- background drawings
    local stripe_height = 8  
    for y = 0, 127, stripe_height do  

        local color
        if flr(y / stripe_height) % 3 == 0 then
            color = 8  
        elseif flr(y / stripe_height) % 3 == 1 then
            color = 0  
        else
            color = 7 
        end
    end

    local moon_x = 64
    local moon_y = 64
    local moon_size = 20
    local moon_color = 7 
    local crater_color = 6 

    -- drawing the moon
    circfill(moon_x, moon_y, moon_size, moon_color)
    circfill(moon_x - 8, moon_y - 6, 3, crater_color)  
    circfill(moon_x + 10, moon_y + 4, 4, crater_color)  
    circfill(moon_x + 5, moon_y - 10, 2, crater_color) 
    circfill(moon_x - 12, moon_y + 8, 2, crater_color)  



    if game_state == "title" then
        title_screen()
    elseif game_state == "playing" then

        if score >= 200 then
            game_state = "you_win" 
        end

        draw_gold_stars()

        for i = 1, special_treasure_count do
            spr(5, special_treasures[i].x, special_treasures[i].y)
        end

        -- default behavior for drawing the bats
        spr(hunter_sprites[hunter_index], hunter_x, hunter_y)

        for i = 1, enemy_count_2 do
            spr(2, enemies_2[i].x, enemies_2[i].y)  
        end
        
        for i = 1, enemy_count do
            spr(3, enemies[i].x, enemies[i].y)
        end

        for i = 1, treasure_count do
            spr(4, treasures[i].x, treasures[i].y)
        end

        if blanket_active then
            spr(1, blanket_x, blanket_y)  
        end

        if sprite_9_active then
            spr(9, sprite_9_x, sprite_9_y)
        end
        

        print("time: " .. flr(timer), 5, 6, 7)
        print("score:" .. score, 93, 6, 7)
        
    elseif game_state == "game_over" then

        cls(0)

        local game_over_text = "game over"
        print(game_over_text, 64 - #game_over_text * 2, 40, 8)  

        local restart_text = "press x to restart"
        print(restart_text, 64 - #restart_text * 2, 70, 8)  

        local save_text = "press z to save high scores"
        print(save_text, 64 - #save_text * 2, 90, 11)  

        local blink = flr(time() * 2) % 2
        local blink_text = "you failed..."
        if blink == 1 then
            print(blink_text, 64 - #blink_text * 2, 110, 7) 
    end
        elseif game_state == "high_scores" then
            draw_high_scores()
        end
    
if game_state == "you_win" then
    cls(0)

    spr(17, 56, 40 + sun_offset_y) --variable here just happened to work so the naming convention is not correct
    spr(18, 64, 40 + sun_offset_y)
    spr(33, 56, 48 + sun_offset_y)
    spr(34, 64, 48 + sun_offset_y)
  
    local win_text = "you win!"
    print(win_text, 64 - #win_text * 2, 60, 8) 

    local win_message = "dracula is a vampire again!"
    print(win_message, 64 - #win_message * 2, 80, 7) 

    local score_text = "final score: " .. score
    print(score_text, 64 - #score_text * 2, 100, 7)  

    local return_text = "press x to restart"
    print(return_text, 64 - #return_text * 2, 120, 11) 

end
end

function title_screen()
    cls(0)
    sun_offset_y += sun_anim_dir
    if sun_offset_y > 8 or sun_offset_y < -8 then
        sun_anim_dir = -sun_anim_dir
    end

    sun2_offset_y += sun2_anim_dir
    if sun2_offset_y > 8 or sun2_offset_y < -8 then
        sun2_anim_dir = -sun2_anim_dir
    end

    spr(17, 56, 40 + sun_offset_y) --variable here just happened to work so the naming convention is not correct
    spr(18, 64, 40 + sun_offset_y)
    spr(33, 56, 48 + sun_offset_y)
    spr(34, 64, 48 + sun_offset_y)
    spr(3, 24, 72 + sun2_offset_y)
    spr(3, 104, 72 + sun2_offset_y)

    local title_text = "the blood hunt"
    print(title_text, 64 - #title_text * 2, title_anim_y - 35, 8)

    local start_text = "press x to start"
    print(start_text, 64 - #start_text * 2, 110, 11)

    local blink = flr(time() * 2) % 2
    local blink_text = "turn dracula back to himself!"
    if blink == 1 then
        print(blink_text, 64 - #blink_text * 2, 80, 9)
    end
end

__gfx__
000000000666666000000000a000000a000880000088880000555550005555500055555000000000000000000000000000000000000000000000000000000000
0000000060606066000cc00000aaaa00008888000866668005ff5ff505ff5ff505ff5ff577777777000000000000000000000000000000000000000000000000
000000006606060600cccc0009aaaaa0088888808677776800f8f8f000f8f8f000f8f8f077777777000000000000000000000000000000000000000000000000
00000000606060660cccccc009aaaaa0888888888677776800fffff000fffff000fffff077777777000000000000000000000000000000000000000000000000
00000000660606060cccccc009aaaaa08888888886777768f999799909997999f999799977777777000000000000000000000000000000000000000000000000
00000000606060660cccccc009aaaaa088888888867777680099799f0f99799f0099799f77777777000000000000000000000000000000000000000000000000
000000006606060600cccc0000999900088888800866668001991990009919900099199107777770000000000000000000000000000000000000000000000000
000000000666666000000000a000000a008888000088880000000110001000100001000000777700000000000000000000000000000000000000000000000000
00000000000008888880000000000000000008888880000000000000000000000000000000000000005555500055555000000000000000000000000000000000
0000000000008555555800000000000000008555555800000000000000000000000000000000000005ff5ff505ff5ff500000000000000000000000000000000
0000000000085fffff5580000000000000085fffff5580000000000000000000000000005000000500f8f8f000f8f8f000000000000000000000000000000000
000000000085fffffff58000000000000085fffffff580000000000005500550055005505550055500fffff000fffff000000000000000000000000000000000
000000000085f555f5558000000000000085f555f555800000000000555555555555555505555550099979990999799900000000000000000000000000000000
00000000008fff72f275800000000000008fff72f2758000000000005005500550055005000550000f99799f0f99799f00000000000000000000000000000000
00000000008ffffffff8800000000000008ffffffff8800000000000000000000000000000000000009919900099199000000000000000000000000000000000
00000000008ff776677f800000000000008ff776677f800000000000000000000000000000000000001000100010001000000000000000000000000000000000
000000000856277776728000000000000888f7677672888000000000000000000077770000777700007777000000000000000000000000000000000000000000
00000000085562777772680000000000856227777772225800000000000000000777777007777770077777700000000000000000000000000000000000000000
00000000085562779772580000000000856657779772555800000000000000007777777777777777777777770000000000000000000000000000000000000000
00000000085562449725580000000000885566789725665800000000000000007777777777777777777777770000000000000000000000000000000000000000
00000000085556255525580000000000088855588888555800000000000000007777777777777777777777770000000000000000000000000000000000000000
00000000085556288525580000000000000088800000888000000000000000007777777777777777777777770000000000000000000000000000000000000000
00000000008556208425800000000000000000000000000000000000000000000777777007777770077777700000000000000000000000000000000000000000
00000000000888800888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000000034050230501f05000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0102000005731067410c7511076107761007000070000700197000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000000
000800000f04013051170511800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000300000c1600e151101411213113121141111511115115000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000006450084500d4500f4501a450214402243000400004000040000400004000040000400004000040000400004000040000400004000040000400004000040000400004000040000400004000040000400
000400000c5600f55114051180511b0411d0412000017000140000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700
000300000c7500f041130311312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00060000190611c0511f04122031280051f000220002200021000220001f0001f000220002200021000220001f0001f0002e0012e0002d0002e0002b0002b0002b0022b005000000000000000000000000000000
000200000c1540d1510e5510f54110041110411273113731147311573500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000400002152526535005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500
000300002f73534735000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000300003053534535044000440010400044000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00030000180251f535260452a55512604176011b6011f601226012560128601296012b601296012760124601216011f6011c601186011560113601116010f6010e60500500005000050000500005000050000500
0002000019045000001e0450000023045000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00040000260452b035300253000500703007030070300703007030070300703007030070300703007030070300703007030070300703007030070300703007030070300703007030070300703007030070300703
000400002474526745297452e7453074532745357453a7452400526005290052e0053000532005350053a00500000000000000000000000000000000000000000000000000000000000000000000000000000000
00010000197770c700197770c7001c7670c7001c7570c7001e7570c700217470c700217370c700237370c700237270c700257170c700287170c7000c7000c700135000c600135000c600135050c605135050c605
00010000287770c700257770c700257670c700237570c700237570c700217470c700217370c7001e7370c7001c7270c7001c7170c70019717127050c700127050070000700007000070000700007000070000700
00020000016100d6111c61131611146110c61108611056110261501601016050c600116001a600006000060000600006000060000600006000060000600006000000000000000000000000000000000000000000
00020000052670061710267006171236700617123570161712357016170a157006170d147006170d147006170b047006170b037006170a037006170a727006170b727006170c717006170b117006170811700617
000400002763022630206201b6201661015610116100d6100b6100761005610036100261002610026100261001610016100161501600016000160001600000000000000000000000000000000000000000000000
00070000386303062025610206101c61019610176101561012610106100f6100d6100b6100a613086130761306613046130361303613006050060500605006050060500605006050060500605006050060500605
000200000c475152740f474186651646515264114540e6550d4550b24408445066440443502234014340062500424002240041500615000040000400004000040000400004000040000400004000040000400004
0002000012055112550f0450e2450d0450c2450b0350a235090350823507025062250502504225030150221501015012150400503205010050760506605066050560504605046050360502605016050160501605
00020000010541325514045142451203515235110351622510025172250e0250a2250702508225050250621503015042150400503205010050760506605066050560504605046050360502605016050160501605
000200003f643232333a64121231346411e2312f641172312a63112221246310d2211e63109221186310522111621032110c62101211086250121504625002150261500615006000060500600006000060000600
000300000c363236650935520641063311b6210432116611023210f611013110a6110361104600036000260001600016000460003600026000160001600016000160004600036000260001600016000160001600
00051c2032251376512a25133641222412e6411b2412564115241216410c2311d631092311963106231166310323112631022310e631012310a63100221086210022104621002210362100211026110021100611
000500001235311353103530f3530e3530e3530d3530d3430c3430c3430b3430b3430a3430a343093330933308333083330733307333063330632305323053230432304323033230332302313023130131301313
000100000c1500e0511105114051170511705014051120510f0510c15100100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100
000500000c466186660c456186560c446186460c436186360c416186160c406184060040000400004000040000400004000040000400004000040000400004000040000400004000040000400004000040000400
0002000002215006200341500630052150063008415006300b215006400d415006401022500640124250065011225006400f425006400d2150064009415006300621500630054150063003215006300341500620
000200003f6142646525361242512345122341212413f6041f3050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100200a4133b2110a1133b4110b013302110b313302210a1133b2110a4133b2110a0133b2210a1133b211091133a211091133a6110a4133b2210a1133b2110a7133b2210a3133b2110a1133b2110a6133b411
000100003b35039350363503475032750307502e7502b750297502675023750235000b20007200062000520003200022000120001200000000000000000000000000000000000000000000000000000000000000
00020000133551f3552b3553735537305003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000000
000100001d251202512f2512c2513e2513d2511d0001d0001d0001d0001d0001d0001d00000200002000020000200002000020000200002000020000200002000020000200002000020000200002000020000200
000100002b52329543265532555323551215511f5511c5511955118551165511455113541105410d5310b52108521075210551103511025110151102400023000130003400024000140001400024000240001400
000100000f12500000000000710500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100000c15515003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0004000014163007000c1000000000000000001015300700000000000000000000000b14300700000000000000000000000613300700000000000000000000000312300700000000000000000000000111300700
000200000c05006731037150070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700
000c00000c34300300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300
0005000011574160741357418074155641a064165641b054185541d0541a7541f5441b044217441d544220441f744245342103426734220242772424014297140070400704007040070400704007040070400704
000600000b07012741127350c07013741137350d07014741147350f0701674116735182001840018300185021800512200122050a2000a4000a3000a0050a70500000000000d0001400014005000000000000000
000300000c343236450933520621063311b6210432116611023210f611013110a6110361104600036000260001600016000460003600026000160001600016000160004600036000260001600016000160001600
00020000187551a5551c7551554517745195451273514535167350f52511725135250c7150e515107150060000600006000060000600006000060000600006000060000600006000060000600006000060000600
000600001c36311000103331031310303107031070513005306041070310705000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000200002406025051270412f0002b0512c0512d0412e0312f0212f0052f00032000030000000037000370002f0002f0002f0002f000000003300004000000000000000000000000000000000000000000000000
001000001c1431c1331c1231c1131b1031a1030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000300002e3322b33128332263312333221331203321d3311b3221a3211932217321153221332112322103210e3120c3110b31209311073120631104312033110231201311013120031100300003000030000300
00010000352103751534100371003f10039100331001f1001f1001f1001f100231002a10034100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00090000013150132501345000002660021600196001260011607116070c60710607156071a6071e607206072260722607206001d6001c60018600156001560014600166001a6001c6001c600166000f60000000
000200001d3551d7451d3351375513345137350070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700
000a00022474129741000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000300001d61506323156002d60001600016000160002600026000360003600036000d60000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100000c0150c0050c005110350c0050c0050c00516055000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005
0007000023745287452d3021e105370021c0051330213302133021330213302133021330213302133021330213302133021330213302133021330213302133021320207002070022b0001f0001f0021f0021f002
000400002f3402f3402f3403434034340343403433034330343303433034330343203432034310343103431034310343103431500300003000030000300003000030000300003000030000300003000030000300
000200001d6651e655083410a4410b3410c4310d3310f43111321134211532117411193111b4111b3011d3011830510305163050f3050e3050d3050c3050b3050a30509305083050630505305043050000000000
000900000864514645070450654502204006050550005500266002460023600216001f6001d6001c6001a60018600176001660015600146000030000300003000030000300003000030000300003000030000300
00020000071540f163163730b22332643216331c6231861315613136130e6130a61304600000000000000000000000b1010710105101031010110100000000000000000000000000000000000000000000000000
0012000015753047000500005700070000770009000097000b0000b7000c0000c7000c000180000c000180000c000180000c00018000210022100221002000000000000000000000000000000000000000000000
000600002336311000103330400010705107031070513005306041070310705000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
00 01020304
00 2e808080
00 80808005
00 80808080
00 80808080
00 80808080
00 80808080
01 80808080
00 80808080
00 80808080
00 80808080
00 80808080
00 80808080
00 80808080
00 80808080
00 80808080
00 80808080
00 80808080
02 80808080
00 80808080
00 80808080
04 40804080
00 80804040
00 80804040
00 80804040
00 80804040
00 80804040
00 80804040
00 80804040
00 80804040
00 80804040
00 80804040
00 80804040
00 80804040
00 80804040
00 80804040
00 80804040
00 80804040
00 80804040
00 80804040
00 80804040
00 80804040
00 80804040
00 80804040
00 80804040
00 80804040
00 80804040
00 40804040
00 40804040
00 40804040
00 40804040
00 40804040
00 40804040
00 40804040
04 40804040
00 80804040
00 40804040
00 40804040
00 40804040
00 40804040
00 40804040
00 40804040
00 40804040
04 40804040

